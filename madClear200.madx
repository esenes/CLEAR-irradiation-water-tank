/******************************************************************
 ** MAD-X CLEAR OPTICS FOR THE VHEE IRRADIATION EXPERIMENT
 ** This is the first attempt, optimisation has to be done by hand
 ** using the match and try to get reasonable values for the betas
 **	at the entrance and waist of the tank
 **
 ** Eugenio Senes
 ** Created 03/09/18
 ******************************************************************/
TITLE, "CLEAR VHEE exp.";
/******************************************************************
 ** Beam parameters from measurements
 ******************************************************************/
ENERGY = 0.200; !GeV
ALFX0 = -0.5;
BETX0 = 20.;
ALFY0 = -0.5;
BETY0 = 20.;
EMIX = 4e-6;
EMIY = 4e-6;

/******************************************************************
 ** Enter your desiderata
 ******************************************************************/
/* BETx_centre = 1e-3;
BETy_centre = 1e-3;
BETx_init = 1;
BETy_init = 1;
BETx_end = 1;
BETy_end = 1; */

/******************************************************************
 ** There we go !
 ******************************************************************/
k350	:=	16.8;
k355	:=	-16.8;
k360	:=	16.8;
k510	:=	16.8;
k515	:=	-16.8;
k520	:=	16.8;

call, file='sequence.seq'; !strengths are defined in the sequence file

beam, PARTICLE=electron, ENERGY=ENERGY;
USE, SEQUENCE=clearSequence;
/* SURVEY, SEQUENCE=clearSequence, FILE='survey.out'; */

/******************************************************************
 ** TWISS and custom variables settings
 ******************************************************************/
TWISS, ALFX=alfx0, ALFY=alfy0, BETX=betx0, BETY=bety0, SEQUENCE=clearSequence;
SIGMA_X := 1e3*SQRT(TABLE(twiss, betx)*EMIX); ! beam size variables
SIGMA_Y := 1e3*SQRT(TABLE(twiss, bety)*EMIY);

SELECT, FLAG=twiss, CLEAR;
SELECT, FLAG=twiss, COLUMN=name, s, SIGMA_X, SIGMA_Y, betx, bety;
TWISS, ALFX=alfx0, ALFY=alfy0, BETX=betx0, BETY=bety0, SEQUENCE=clearSequence, FILE='twiss0.twiss';

/******************************************************************
 ** Matching symmetric optics
 ******************************************************************/
overcurrent = 1.3;

MATCH, SEQUENCE=clearSequence, ALFX=alfx0, ALFY=alfy0, BETX=betx0, BETY=bety0;
	CONSTRAINT, SEQUENCE=clearSequence, RANGE='F20', betx<3.5e-3;
	CONSTRAINT, SEQUENCE=clearSequence, RANGE='F20', bety = 2;
	CONSTRAINT, SEQUENCE=clearSequence, RANGE='F5', betx>10, betx<12;
	CONSTRAINT, SEQUENCE=clearSequence, RANGE='F5', bety = 2;

	/* CONSTRAINT, SEQUENCE=clearSequence, RANGE='MQD515', betx<70, bety<70; */

	/* VARY, name=k350, STEP=1e-6, LOWER=-16.8, UPPER=16.8; */
	/* VARY, name=k355, STEP=1e-6, LOWER=-16.8, UPPER=16.8; */
	VARY, name=k360, STEP=1e-6, LOWER=-16.8, UPPER=16.8;
	VARY, name=k510, STEP=1e-6, LOWER=-16.8, UPPER=16.8;
	/* VARY, name=k515, STEP=1e-6, LOWER=-16.8, UPPER=16.8; */
	/* VARY, name=k520, STEP=1e-6, LOWER=-16.8, UPPER=16.8; */
 	/* VARY, name=k350, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
 	/* VARY, name=k355, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
	/* VARY, name=k360, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
	/* VARY, name=k510, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
	/* VARY, name=k515, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
	/* VARY, name=k520, STEP=1e-6, LOWER=-16.8*overcurrent, UPPER=16.8*overcurrent; */
	VARY, name=k350, STEP=1e-6;
	VARY, name=k355, STEP=1e-6;
	/* VARY, name=k360, STEP=1e-6; */
	/* VARY, name=k510, STEP=1e-6; */
	VARY, name=k515, STEP=1e-6;
	VARY, name=k520, STEP=1e-6;
	SIMPLEX, CALLS=1e9, TOLERANCE=1.0e-21;
 ENDMATCH;

TWISS, ALFX=alfx0, ALFY=alfy0, BETX=betx0, BETY=bety0, SEQUENCE=clearSequence, FILE='final.twiss';
PLOT, HAXIS=S, VAXIS1=BETX, VAXIS2=BETY, colour=100, HMAX=5.53;

DISTANCE := TABLE(TWISS, centreTank, S)-TABLE(TWISS, startTank, S);
ANGLE_X := ATAN(SQRT(EMIX*(TABLE(TWISS, startTank, betx) - TABLE(TWISS, centreTank, betx)))/DISTANCE);
ANGLE_X_DEG := ANGLE_X*360/(2*PI);
ANGLE_Y := ATAN(SQRT(EMIY*(TABLE(TWISS, startTank, bety) - TABLE(TWISS, centreTank, bety)))/DISTANCE);
ANGLE_Y_DEG := ANGLE_Y*360/(2*PI);
value ANGLE_X_DEG;
value ANGLE_Y_DEG;

STOP;
